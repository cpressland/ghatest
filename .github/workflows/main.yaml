name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ master ]

  # allows manual trigger
  workflow_dispatch:

jobs:
  tests:
    name: tests
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.2.0a2]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }}
      - name: Disable poetry virtualenv creation
        run: poetry config virtualenvs.create false
      - name: Install dependencies
        run: poetry install
      - name: Show dependencies
        run: poetry show
      - name: Lint with black
        run: black --check .
      - name: Lint with flake8
        run: flake8 .
  publish:
    name: publish
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [tests]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.2.0a2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }} poetry-dynamic-versioning
      - name: Build dist
        run: poetry build
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish -r testpypi
